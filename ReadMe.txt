~»нтерфейсы

интерфейсы и абстрактные методы.

»нтерфейсы добавл€ют классам определЄнную функциональность,
котора€ должна быть определена в целевом классе,
использование интерфейсов в каком-то классе синтаксически напоминает наследование,
но интерфейсы не наследуют, а реализуют.

√овор€т что интерфейсы замен€ют множественное наследование,
которое отсутствуют в €зыке C#,но это не совсем так, 
в отличие от наследовани€, коотора€ позвол€ет выстраивать чЄткую иерархию класса,
интерфейсы позвол€ют точечно добавл€ть дополнительные возможности в разные элементы этой иерархии.
 
»нтерфейс как правило показывает, что можно делать с объектами
и это хорошо видно по схеме именовани€ интерфейсов,
например:
	Imovable    - ќбъект можно перемещать.
	(перемещение определ€етс€ в том классе который реализует интерфейс)

	IComparable - ќбъекты можно сравнивать.

	IClickable  - 

	ISortable   - значит что объект €вл€етс€ контейнером(коллекцией), и его можно сортировать
	(только контейнеры)
.

class DerivedClass:BaseClass
{
	..........
}



class Class:Interface
{

}